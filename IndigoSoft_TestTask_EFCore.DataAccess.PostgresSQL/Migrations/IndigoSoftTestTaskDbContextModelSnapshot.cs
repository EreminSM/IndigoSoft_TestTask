// <auto-generated />
using System;
using IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Migrations
{
    [DbContext(typeof(IndigoSoftTestTaskDbContext))]
    partial class IndigoSoftTestTaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.ConnectionEventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IpAddressId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IpAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("ConnectionEvents");
                });

            modelBuilder.Entity("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.IpAddressEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("IpAddresses");
                });

            modelBuilder.Entity("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.ConnectionEventEntity", b =>
                {
                    b.HasOne("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.IpAddressEntity", "IpAddress")
                        .WithMany("ConnectionEvents")
                        .HasForeignKey("IpAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.UserEntity", "User")
                        .WithMany("ConnectionEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IpAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.IpAddressEntity", b =>
                {
                    b.Navigation("ConnectionEvents");
                });

            modelBuilder.Entity("IndigoSoft_TestTask_EFCore.DataAccess.PostgresSQL.Models.UserEntity", b =>
                {
                    b.Navigation("ConnectionEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
